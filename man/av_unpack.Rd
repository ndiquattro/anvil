% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/av_unpack.R
\name{av_unpack}
\alias{av_unpack}
\title{Unpack a nested column}
\usage{
av_unpack(.tbl, nested_col, keys = NULL, suffix = NULL, drop = TRUE)
}
\arguments{
\item{.tbl}{A tbl_sql.}

\item{nested_col}{The target nested column.}

\item{keys}{Character vector of desired keys from \code{nested_col}. All keys will be extracted if \code{NULL}.}

\item{suffix}{Character value to add to the end of extracted column names.}

\item{drop}{If \code{TRUE} drop the nested_col after unpacking.}
}
\value{
A tbl_sql.
}
\description{
Extract nested Athena columns into their own column.
}
\details{
Note this function works on the database end only. For unpacking in memory data see \code{\link[tidyr:nest]{tidyr::unnest()}}.
}
\examples{
btable <-
  av_gt("sos", "address") \%>\%
  transmute(cass = residential_address_cass$components)

# Extract all
av_unpack(btable, cass)

# Extract city and zip
av_unpack(btable, cass, keys = c("city_name", "zipcode"))

# Add suffix to avoid name conflicts or easier later selection
av_unpack(btable, cass, "zipcode", suffix = "_cass")
}
\author{
Nicholas DiQuattro \email{nicholas@alloy.us}
}
