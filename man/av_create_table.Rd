% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/av_create_table.R
\name{av_create_table}
\alias{av_create_table}
\title{Create an Athena table}
\usage{
av_create_table(
  x,
  name,
  schema = "data-science",
  partition_cols = NULL,
  bucket_cols = NULL,
  bucket_count = NULL,
  overwrite = FALSE,
  async = FALSE,
  con = getOption("anvil.con")
)
}
\arguments{
\item{x}{A tbl, valid SQL character string, or data.frame.}

\item{name}{Character. Desired name of table.}

\item{schema}{Character. Desired schema.}

\item{partition_cols}{Character vector designating partition columns.}

\item{bucket_cols}{Character vector designating bucket columns. Note you must also define \code{bucket_count}.}

\item{bucket_count}{Interger designating the number of buckets (thus files) to create. Note you must also define \code{bucket_cols}.}

\item{overwrite}{Boolean. If \code{TRUE} will call \code{\link[=av_drop_table]{av_drop_table()}} before
attempting to create.}

\item{async}{Boolean. If \code{FALSE} will wait for the table to finish building.
If \code{TRUE} will call \code{\link[=av_async_collect]{av_async_collect()}} and return the Athena QueryExecutionId}

\item{con}{Object. Database connection to use. Defaults to most recent call
of \code{\link[=av_connect]{av_connect()}}.}
}
\value{
If \code{x} is a data.frame then the location of the data on S3.
}
\description{
Create a table from a tbl, SQL expression, or local data.frame.
}
\details{
This function will take different paths to create a table based on the value
of \code{x}. When \code{x} is a tbl or character a "CREATE TABLE AS" query is generated
and executed. When \code{x} is a local data.frame, the data is written to parquet
locally using \code{\link[arrow:write_parquet]{arrow::write_parquet()}}, uploaded to S3, and a "CREATE
EXTERNAL TABLE" query is generated and executed. In this last case, the
location of the data on S3 is returned. See links in References for more.

Note that partitioning is only supported for SQL and tbl_sql inputs. Athena
also requires the partitioning columns are "last" in the query.
}
\examples{
# From a tbl
av_gt("rds-export-graphite", "graphite_person") \%>\%
  head(50) \%>\%
  av_create_table("anvil_test")

# From SQL
tsql <- 'SELECT * FROM "rds-export-graphite".graphite_person LIMIT 49'
av_create_table(tsql, name = "anvil_test2")

# Uploading a data.frame
av_create_table(mtcars, name = "anvil_test3")
}
\references{
\href{https://docs.aws.amazon.com/athena/latest/ug/create-table-as.html}{CREATE TABLE AS Docs}

\href{https://docs.aws.amazon.com/athena/latest/ug/create-table.html}{CREATE TABLE Docs}

\href{https://docs.aws.amazon.com/athena/latest/ug/bucketing-vs-partitioning.html}{Bucketing vs Partitioning}

\href{https://aws.amazon.com/premiumsupport/knowledge-center/set-file-number-size-ctas-athena/?}{Specifying file size with buckets}
}
\seealso{
Other table modifiers: 
\code{\link{av_drop_table}()}
}
\author{
Nicholas DiQuattro \email{nicholas@alloy.us}
}
\concept{table modifiers}
